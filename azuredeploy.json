{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "baseUrl": {
            "type": "string",
            "metadata": {
                "description": "Select the appropriate Repository Base URL containing Pattern Templates and Resource Templates"
            },
            "defaultValue": "https://raw.githubusercontent.com/drameshdba/",
            "allowedValues": [
                "https://raw.githubusercontent.com/drameshdba/"
            ]
},
"patternName": {
            "type": "string",
            "metadata": {
                "description": "Select the appropriate Architectural Pattern"
            },
            "defaultValue": "cvm1",
            "allowedValues": [
                "cvm1",
                "cvm2",
                "cvm3",
                "cvm4",
                "cvm5"
            ]
},
"storageAccountName": {
            "type": "string",
            "metadata": {
                "description": "Enter a unique Name for a new Storage Account or specify the name of an existing Storage Account. Use PowerShell and the following command to generate a unique Storage Account Name 'storage + (-join ((48..57) + (97..122) | Get-Random -Count 15 | % {[char]$_}))'"
            },
            "defaultValue": "storage8tza7ir3wymqkef"
        },
        "storageNewOrExisting": {
            "type": "string",
            "metadata": {
                "description": "Is the Storage Account New or Existing?"
            },
            "defaultValue": "existing",
            "allowedValues": [
                "new",
                "existing"
            ]
},
"storageExistingResourceGroup": {
            "type": "string",
            "metadata": {
                "description": "Specifiy the existing Storage Resource Group. Leave blank if creating a new Storage Account"
            },
            "defaultValue": "TEST-Melbourne"
        },
        "virtualNetworkName": {
            "type": "string",
            "metadata": {
                "description": "Enter a Name for a Virtual Network or specify the name of an existing Virtual Network."
            },
            "defaultValue": "vnet-1"
},
"virtualNetworkNewOrExisting": {
            "type": "string",
            "metadata": {
                "description": "Is the Virtual Network New or Existing?"
            },
            "defaultValue": "existing",
            "allowedValues": [
                "new",
                "existing"
            ]
},
"virtualNetworkExistingResourceGroup": {
            "type": "string",
            "metadata": {
                "description": "Specifiy the existing Virtual Network Resource Group. Leave blank if creating a new Virtual Network"
            },
            "defaultValue": "TEST-Melbourne"
},
"virtualNetworkPrefix": {
            "type": "string",
            "metadata": {
                "description": "Specify the Virtual Network Prefix to create or to be used"
            },
            "defaultValue": "10.0.0.0/16"
        },
        "subnet0Prefix": {
            "type": "string",
            "metadata": {
                "description": "Specify the the Subnet Prefix to create or to be used"
            },
            "defaultValue": "10.0.0.0/26"
        },
        "subnet0Name": {
            "type": "string",
            "metadata": {
                "description": "Specify the Subnet name to create or to be used"
            },
            "defaultValue": "vm-subnet"
        },
        "vmAdminUserName": {
            "type": "string",
            "metadata": {
                "description": "Specify the VM local Logon Account that will have Administration Priviledges"
            },
            "defaultValue": "testuser",
            "minLength": 1
        },
        "vmAdminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Enter a Password for the local Administration Account"
            },
            "defaultValue": "P@ssword1Password2"
        },
       "vmCount": {
            "type": "string",
            "metadata": {
                "description": "How many Virtual Machine do you want to deploy?"
            },
            "defaultValue": "1",
            "allowedValues": [ "1", "2", "3", "4" ]
        },
        "vmType": {
            "type": "string",
            "metadata": {
                "description": "What Operating System to you want to deploy for the VM's. 0 = Windows, 1 = Linux"
            },
            "defaultValue": "0",
            "allowedValues": [ "0", "1" ]
        }
},
"variables": {
        "templatesFolder": "templates/master",
        "templateUrl": "[concat(parameters('baseUrl'), variables('templatesFolder'), '/', parameters('patternName'), '.json')]",
        "storage-settings": {
            "accounts": [
                "[parameters('storageAccountName')]"
            ],
            "newOrExisting": "[parameters('storageNewOrExisting')]",
            "existingRg": "[parameters('storageExistingResourceGroup')]"
        },
        "vnet-settings": {
            "name": "[parameters('virtualNetworkName')]",
            "newOrExisting": "[parameters('virtualNetworkNewOrExisting')]",
            "existingRg": "[parameters('virtualNetworkExistingResourceGroup')]",
            "prefix": "[parameters('virtualNetworkPrefix')]",
            "subnets": {
                "subnet0Prefix": "[parameters('subnet0Prefix')]",
                "subnet0Name": "[parameters('subnet0Name')]"
            }
        },
        "vm-settings": {
            "adminUserName": "[parameters('vmAdminUserName')]",
            "adminPassword": "[parameters('vmAdminPassword')]",
            "count": "[int(parameters('vmCount'))]",
            "type": "[int(parameters('vmType'))]"
        }
    },
    "resources": [
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('AvailSet-name')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "Availability Set"
      },
      "properties": {
        "platformUpdateDomainCount": 5,
        "platformFaultDomainCount": 3
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('NIC-prefix'), copyindex())]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "Network Interface"
      },
      "copy": {
        "name": "nic-loop",
        "count": "[parameters('number-of-instance')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('VNet-Name'))]",
        "[concat('Microsoft.Network/loadBalancers/', variables('LoadBalancer-name'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('VNet-Name')), '/subnets/', variables('vm-subnet-name'))]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('LoadBalancer-name')), '/backendAddressPools/', variables('backend-address-pool-name'))]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('VM-prefix'), copyindex())]",
      "copy": {
        "name": "vm-loop",
        "count": "[parameters('number-of-instance')]"
      },
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "Virtual Machines"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', parameters('storage-account-name'))]",
        "nic-loop",
        "[concat('Microsoft.Compute/availabilitySets/', variables('AvailSet-name'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('AvailSet-name'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vm-size')]"
        },
        "osProfile": {
          "computerName": "[concat(variables('VM-prefix'), copyIndex())]",
          "adminUsername": "[parameters('vm-admin-name')]",
          "adminPassword": "[parameters('vm-admin-password')]",
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2012-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://', parameters('storage-account-name'), '.blob.core.windows.net/vhds/', 'osdisk', copyindex(), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('NIC-prefix'), copyindex()))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Network/loadBalancers",
      "name": "[variables('LoadBalancer-name')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "Load Balancer"
      },
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LoadBalancerFrontEnd",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('PublicIP-name'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('backend-address-pool-name')]"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "Http",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('LoadBalancer-name')), '/frontendIPConfigurations/LoadBalancerFrontEnd')]"
              },
              "frontendPort": 80,
              "backendPort": 80,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 4,
              "protocol": "Tcp",
              "loadDistribution": "Default",
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('LoadBalancer-name')), '/backendAddressPools/', variables('backend-address-pool-name'))]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('LoadBalancer-name')), '/probes/TCP-Probe')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "TCP-Probe",
            "properties": {
              "protocol": "Tcp",
              "port": 80,
              "intervalInSeconds": 15,
              "numberOfProbes": 2
            }
          }
        ],
        "inboundNatRules": [ ],
        "outboundNatRules": [ ],
        "inboundNatPools": [ ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('PublicIP-name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('PublicIP-name')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "Public IP"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4,
},
            "dependsOn": []
     
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('VNet-name')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "Virtual Network"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.1.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "[variables('vm-subnet-name')]",
            "properties": {
              "addressPrefix": "10.1.0.0/24"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      
      "name": "[parameters('storage-account-name')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "Storage Account"     
      },
      "properties": {
        "accountType": "Standard_LRS"
            }
    }
  ]
}
